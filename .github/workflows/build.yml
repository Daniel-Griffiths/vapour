name: Build/release

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"

permissions:
  contents: write

jobs:
  release:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "yarn"

      - name: "Install Dependencies"
        run: yarn install --prefer-offline --frozen-lockfile

      - name: "Build Mac and Windows"
        if: matrix.os == 'macos-latest'
        run: |
          yarn build --win --mac

      - name: "Build Linux AppImage"
        if: matrix.os == 'ubuntu-latest'
        run: |
          yarn build --linux

      # - name: "Build Linux Flatpak"
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     # Install flatpak-builder
      #     sudo apt-get update
      #     sudo apt-get install -y flatpak flatpak-builder

      #     # Install required flatpak runtimes (with --user flag)
      #     flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      #     flatpak install --user -y flathub org.freedesktop.Platform//23.08
      #     flatpak install --user -y flathub org.freedesktop.Sdk//23.08
      #     flatpak install --user -y flathub org.electronjs.Electron2.BaseApp/x86_64/23.08

      #     # Install electron-installer-flatpak
      #     npm install -g @malept/electron-installer-flatpak

      #     # Build flatpak
      #     yarn run build:dist
      #     yarn run build:linuxdir
      #     yarn run build:flatpak

      - name: "Get Package Version"
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: master
          tag_name: ${{ steps.package-version.outputs.current-version}}
          files: |
            release/**/Vapour-*.AppImage
            release/**/Vapour-*.deb
            release/**/Vapour-*.exe
            release/**/Vapour-*.dmg
            release/**/Vapour-*.flatpak
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
